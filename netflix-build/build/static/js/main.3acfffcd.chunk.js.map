{"version":3,"sources":["axios.js","Requests.js","Banner.js","Nav.js","MovieModal/index.js","Row.js","screens/HomeScreen.js","firebase.js","screens/SignupScreen.js","screens/LoginScreen.js","features/userSlice.js","screens/PlansScreen.js","screens/ProfileScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleShow","history","useHistory","transitionNavBar","window","screenY","addEventListener","removeEventListener","onClick","push","src","alt","MovieModal","release_date","first_air_date","vote_average","setModalVisibility","trailerUrl","setTrailerUrl","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","role","videoId","opts","height","width","playerVars","autoplay","Row","fetchUrl","isLargeRow","id","movies","setMovies","modalVisibility","movieSelected","setMovieSelection","class","document","getElementById","scrollLeft","innerWidth","map","handleClick","poster_path","loading","HomeScreen","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SignupScreen","emailRef","useRef","passwordRef","ref","placeholder","type","e","preventDefault","signInWithEmailAndPassword","current","value","authUser","alert","message","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","PlansScreen","products","setProducts","useSelector","subscription","setSubscription","collection","doc","uid","querySnapshot","forEach","current_period_end","seconds","current_period_start","where","productDoc","docs","price","prices","priceId","priceData","loadCheckout","add","success_url","location","origin","cancel_url","onSnapshot","snap","sessionId","loadStripe","redirectToCheckout","Date","toLocaleDateString","Object","entries","productId","productData","isCurrentPackage","toLowerCase","includes","description","ProfileScreen","email","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","path","exact","store","configureStore","reducer","userReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3acfffcd.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","//Typically would store in {process.env.API_KEY}\r\nconst API_KEY = \"22b60bbd4026364c63e3b2c253735098\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;","import React, { useEffect, useState } from \"react\";\r\nimport \"./Banner.css\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./Requests\";\r\n\r\nfunction Banner() {\r\n  // Fetch a movie and store it\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(movie);\r\n\r\n  function truncate(string, n) {\r\n    /* Function to make description say ... if too long */\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <header \r\n    className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My list</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n\r\n\tconst [show, handleShow] = useState(false);\r\n\r\n  //sets up when you click the profile image sends you to /history\r\n  const history = useHistory();\r\n\r\n\tconst transitionNavBar =() => {\r\n\t\tif (window.screenY > 100) {\r\n\t\t\thandleShow(true);\r\n\t\t} else {\r\n\t\t\thandleShow(false);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"scroll\", transitionNavBar);\r\n\t\treturn () => window.removeEventListener(\"scroll\", transitionNavBar);\r\n\t}, []);\r\n\r\n    return (\r\n      <div className={`nav ${show && \"nav__black\"}`}>\r\n        <div className=\"nav_contents\">\r\n          <img\r\n            onClick={() => history.push(\"/\")}\r\n            className=\"nav__logo\"\r\n            src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n            alt=\"\"\r\n          />\r\n\r\n          <img\r\n            onClick={() => history.push(\"/profile\")}\r\n            className=\"nav__avatar\"\r\n            src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Nav\r\n","import React,{useEffect, useState} from 'react';\r\nimport './MovieModal.css';\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst MovieModal = ({backdrop_path,title,overview,name,release_date,first_air_date,vote_average,setModalVisibility}) => {\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n    const [trailerUrl ,setTrailerUrl] = useState(\"\") \r\n    const opts = {\r\n        height : \"390\",\r\n        width : \"100%\",\r\n        playerVars : {\r\n            autoplay : 1,\r\n        },\r\n    }\r\n    const randomPorcentaje = ()=>{\r\n        return Math.floor(Math.random() * 100);\r\n    }\r\n    useEffect(() => {\r\n        if(trailerUrl){\r\n            setTrailerUrl('')\r\n        }else{\r\n            movieTrailer(title || name || \"\")\r\n            .then(url =>{\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            }).catch(error => console.log(error))\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"presentation\" role=\"presentation\">\r\n            <div className=\"wrapper-modal\">\r\n                <div className=\"modal\">\r\n                    <span onClick={()=>setModalVisibility(false)}className=\"modal-close\"><CancelIcon/></span>\r\n                    {trailerUrl ? <Youtube videoId={trailerUrl} opts={opts}/> :                     \r\n                        (<img\r\n                        className=\"modal__poster-img\"\r\n                        src={`${base_url}${backdrop_path}`}\r\n                    />)}\r\n\r\n                    <div className=\"modal__content\">\r\n                        <p className=\"modal__details\"><span className=\"modal__user-perc\">{randomPorcentaje()}% for you</span> {release_date ? release_date : first_air_date}</p>\r\n                        <h2 className=\"modal__title\">{title ? title : name}</h2>\r\n                        <p className=\"modal__overview\">{overview}</p>\r\n                        <p className=\"modal__overview\">Vote Average: {vote_average}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieModal;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport MovieModal from './MovieModal';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\n\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow, id }) {\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n    const [movies, setMovies] = useState([])\r\n    const [modalVisibility,setModalVisibility] = useState(false);\r\n    const [movieSelected, setMovieSelection] = useState({});\r\n\r\n\r\n  // A snippet of code which runs based on a specific condition/variable\r\n  useEffect(() => {\r\n    // if [], run once when the row loads, and don't run it again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const handleClick = (movie) =>{\r\n    setModalVisibility(true);\r\n    setMovieSelection(movie);\r\n\r\n}\r\nreturn (\r\n    <section className=\"row\">\r\n        {/** TITLE */}\r\n        <h2>{title}</h2>\r\n        <div class=\"slider\">\r\n \r\n            <div className=\"slider__arrow-left\" ><span className=\"arrow\" onClick={()=>{document.getElementById(id).scrollLeft-=(window.innerWidth-80)}}><ArrowBackIosIcon/></span></div>\r\n            <div id={id} className=\"row__posters\">\r\n                {/**SEVERAL ROW__POSTER */}\r\n                {movies.map(movie=>(\r\n                    <img\r\n                        key={movie.id}\r\n                        onClick={() => handleClick(movie)}\r\n                        className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} \r\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                        loading=\"lazy\"\r\n                        alt={movie.name}/>\r\n                ))}\r\n                \r\n            </div>\r\n            <div className=\"slider__arrow-right\" ><span className=\"arrow\" onClick={()=>{document.getElementById(id).scrollLeft+=(window.innerWidth-80)}}><ArrowForwardIosIcon/></span></div>\r\n        </div>\r\n        {modalVisibility && <MovieModal {...movieSelected} setModalVisibility={setModalVisibility}/>}\r\n    </section>\r\n)\r\n}\r\n\r\nexport default Row;","import React from \"react\";\r\nimport Banner from \"../Banner\";\r\nimport \"./HomeScreen.css\";\r\nimport Nav from \"../Nav\";\r\nimport requests from \"../Requests\";\r\nimport Row from \"../Row\";\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <div className=\"homeScreen\">\r\n      <Nav />\r\n      <Banner />\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} id=\"TN\" />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} id=\"TR\" />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} id=\"AM\" />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} id=\"CM\" />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} id=\"HM\" />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} id=\"RM\" />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} id=\"DM\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD4vosYNs38EDueDZOgfn-Oarm81pEYnJo\",\r\n    authDomain: \"netflix-build-745d6.firebaseapp.com\",\r\n    projectId: \"netflix-build-745d6\",\r\n    storageBucket: \"netflix-build-745d6.appspot.com\",\r\n    messagingSenderId: \"793774761130\",\r\n    appId: \"1:793774761130:web:9074f9b30b294daa8a9cd3\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export { auth };\r\n  export default db;","import React, { useRef } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport \"./SignupScreen.css\";\r\n\r\nfunction SignupScreen() {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"signupScreen\">\r\n      <form>\r\n        <h1>Sign In</h1>\r\n        <input ref={emailRef} placeholder=\"Email\" type=\"email\" />\r\n        <input ref={passwordRef} placeholder=\"Password\" type=\"password\" />\r\n        <button type=\"submit\" onClick={signIn}>\r\n          Sign In\r\n        </button>\r\n\r\n        <h4>\r\n          <span className=\"signupScreen__gray\">New to Netflix? </span>\r\n          <span className=\"signupScreen__link\" onClick={register}>\r\n            Sign Up now.\r\n          </span>\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupScreen;","import React, { useState } from \"react\";\r\nimport \"./LoginScreen.css\";\r\nimport SignupScreen from \"./SignupScreen\";\r\n\r\nfunction LoginScreen() {\r\n  const [signIn, setSignIn] = useState(false);\r\n\r\n  return (\r\n    <div className=\"loginScreen\">\r\n      <div className=\"loginScreen__background\">\r\n        <img\r\n          className=\"loginScreen__logo\"\r\n          src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"\"\r\n        />\r\n        <button onClick={() => setSignIn(true)} className=\"loginScreen__button\">\r\n          Sign In\r\n        </button>\r\n\r\n        <div className=\"loginScreen__gradient\" />\r\n      </div>\r\n\r\n      <div className=\"loginScreen__body\">\r\n        {signIn ? (\r\n          <SignupScreen />\r\n        ) : (\r\n          <>\r\n            <h1>Unlimited films, TV programmes and more.</h1>\r\n            <h2>Watch anywhere. Cancel at any time.</h2>\r\n            <h3>\r\n              Ready to watch? Enter your email to create or restart your\r\n              membership.\r\n            </h3>\r\n\r\n            <div className=\"loginScreen__input\">\r\n              <form>\r\n                <input type=\"email\" placeholder=\"Email Address\" />\r\n                <button\r\n                  onClick={() => setSignIn(true)}\r\n                  className=\"loginScreen__getStarted\"\r\n                >\r\n                  GET STARTED\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;","import { createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    }\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\n\nexport default userSlice.reducer;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport db from \"../firebase\";\r\nimport \"./PlansScreen.css\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nfunction PlansScreen() {\r\n  const [products, setProducts] = useState([]);\r\n  const user = useSelector(selectUser);\r\n  const [subscription, setSubscription] = useState(null);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"customers\")\r\n      .doc(user.uid)\r\n      .collection(\"subscriptions\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach(async (subscription) => {\r\n          setSubscription({\r\n            role: subscription.data().role,\r\n            current_period_end: subscription.data().current_period_end.seconds,\r\n            current_period_start: subscription.data().current_period_start\r\n              .seconds,\r\n          });\r\n        });\r\n      });\r\n  }, [user.uid]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"products\")\r\n      .where(\"active\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const products = {};\r\n        querySnapshot.forEach(async (productDoc) => {\r\n          products[productDoc.id] = productDoc.data();\r\n          const priceSnap = await productDoc.ref.collection(\"prices\").get();\r\n          priceSnap.docs.forEach((price) => {\r\n            products[productDoc.id].prices = {\r\n              priceId: price.id,\r\n              priceData: price.data(),\r\n            };\r\n          });\r\n        });\r\n        setProducts(products);\r\n      });\r\n  }, []);\r\n\r\n  console.log(products);\r\n  console.log(subscription);\r\n\r\n  const loadCheckout = async (priceId) => {\r\n    const docRef = await db\r\n      .collection(\"customers\")\r\n      .doc(user.uid)\r\n      .collection(\"checkout_sessions\")\r\n      .add({\r\n        price: priceId,\r\n        success_url: window.location.origin,\r\n        cancel_url: window.location.origin,\r\n      });\r\n\r\n    docRef.onSnapshot(async (snap) => {\r\n      const { error, sessionId } = snap.data();\r\n\r\n      if (error) {\r\n        // Show an error to your customer and\r\n        // inspect your Cloud Function logs in the Firebase console.\r\n        alert(`An error occured: ${error.message}`);\r\n      }\r\n\r\n      if (sessionId) {\r\n        // We have a session, let's redirect to Checkout\r\n        // Init Stripe\r\n\r\n        const stripe = await loadStripe(\r\n          \"pk_test_51JNIaUDAVw6bIvt4BHiNAsUdS9AYsYxwUmhwGYAWPX9aWVKwjYrX7f0Ob1Ill3TL7jsAaGyatayjmURgZOxrpvaR00rEqw77OF\"\r\n        );\r\n        stripe.redirectToCheckout({ sessionId });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"plansScreen\">\r\n      <br />\r\n      {subscription && (\r\n        <p>\r\n          Renewal date:{\" \"}\r\n          {new Date(\r\n            subscription?.current_period_end * 1000\r\n          ).toLocaleDateString()}\r\n        </p>\r\n      )}\r\n      {Object.entries(products).map(([productId, productData]) => {\r\n        // TODO: add some logic to check if the user's subscription is active...\r\n        const isCurrentPackage = productData.name\r\n          ?.toLowerCase()\r\n          .includes(subscription?.role);\r\n\r\n        return (\r\n          <div\r\n            key={productId}\r\n            className={`${\r\n              isCurrentPackage && \"plansScreen__plan--disabled\"\r\n            } plansScreen__plan`}\r\n          >\r\n            <div className=\"plansScreen__info\">\r\n              <h5>{productData.name}</h5>\r\n              <h6>{productData.description}</h6>\r\n            </div>\r\n\r\n            <button\r\n              onClick={() =>\r\n                !isCurrentPackage && loadCheckout(productData.prices.priceId)\r\n              }\r\n            >\r\n              {isCurrentPackage ? \"Current Package\" : \"Subscribe\"}\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlansScreen;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { auth } from \"../firebase\";\r\nimport Nav from \"../Nav\";\r\nimport PlansScreen from \"./PlansScreen\";\r\nimport \"./ProfileScreen.css\";\r\n\r\nfunction ProfileScreen() {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className=\"profileScreen\">\r\n      <Nav />\r\n      <div className=\"profileScreen__body\">\r\n        <h1>Edit Profile</h1>\r\n        <div className=\"profileScreen__info\">\r\n          <img\r\n            src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"profileScreen__details\">\r\n            <h2>{user.email}</h2>\r\n            <div className=\"profileScreen__plans\">\r\n              <h3>Plans</h3>\r\n\r\n              <PlansScreen />\r\n              <button\r\n                onClick={() => auth.signOut()}\r\n                className=\"profileScreen__signOut\"\r\n              >\r\n                Sign Out\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\n\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        //Logged In\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n        );\n      } else {\n        //Logged Out\n        dispatch(logout());\n      }\n    });\n\n    return unsubscribe;\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <LoginScreen />\n        ) : (\n          <Switch>\n            <Route path=\"/profile\">\n              <ProfileScreen />\n            </Route>\n            <Route exact path=\"/\">\n              <HomeScreen />\n            </Route>\n          </Switch>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}